#include <boost/multiprecision/cpp_int.hpp>
using namespace boost::multiprecision;
typedef number<cpp_int_backend<2, 2, unsigned_magnitude, unchecked, void> > uint2_t;
typedef number<cpp_int_backend<4, 4, unsigned_magnitude, unchecked, void> > uint4_t;
typedef number<cpp_int_backend<24, 24, unsigned_magnitude, unchecked, void> > uint24_t;
typedef number<cpp_int_backend<40, 40, unsigned_magnitude, unchecked, void> > uint40_t;
typedef number<cpp_int_backend<48, 48, unsigned_magnitude, unchecked, void> > uint48_t;
typedef number<cpp_int_backend<56, 56, unsigned_magnitude, unchecked, void> > uint56_t;
typedef number<cpp_int_backend<72, 72, unsigned_magnitude, unchecked, void> > uint72_t;
typedef number<cpp_int_backend<80, 80, unsigned_magnitude, unchecked, void> > uint80_t;
typedef number<cpp_int_backend<88, 88, unsigned_magnitude, unchecked, void> > uint88_t;
typedef number<cpp_int_backend<96, 96, unsigned_magnitude, unchecked, void> > uint96_t;
typedef number<cpp_int_backend<104, 104, unsigned_magnitude, unchecked, void> > uint104_t;
typedef number<cpp_int_backend<112, 112, unsigned_magnitude, unchecked, void> > uint112_t;
typedef number<cpp_int_backend<120, 120, unsigned_magnitude, unchecked, void> > uint120_t;
#include <map>
class TEST {
public:
  uint2_t TEST_cmd;
  uint16_t TEST_cmdaddr;
  uint8_t TEST_cmddata;
  bool TEST_cmdflag;
  uint2_t TEST_status;
  uint16_t TEST_address;
  uint16_t TEST_length;
  uint128_t TEST_counter;
  uint8_t TEST_XRAM[65536];
  bool TEST_flag;
  std::map<uint32_t, uint32_t>TEST_big_ram;
  uint128_t ENCRYPT_rd_data;
  uint128_t ENCRYPT_enc_data;
  uint4_t ENCRYPT_byte_cnt;
  uint16_t ENCRYPT_blk_cnt;
  void init_ENCRYPT();
  bool c_1692454;
  bool c_1692456;
  bool decode_1692401();
  bool c_1692373;
  bool c_1692369;
  bool c_1692375;
  bool c_1692398;
  bool c_1692391;
  bool c_1692393;
  bool c_1692395;
  bool c_1692400;
  bool c_1692387;
  bool c_1692401;
  bool decode_1692440();
  bool c_1692437;
  bool c_1692433;
  bool c_1692439;
  bool c_1692429;
  bool c_1692440;
  bool decode_1692476();
  bool c_1692476;
  bool decode_1692753();
  bool c_1692751;
  bool c_1692747;
  bool c_1692753;
  bool decode_1692775();
  bool c_1692775;
  uint16_t decode_1692401_update_TEST_address();
  bool c_1692378;
  bool c_1692415;
  uint8_t c_1692412;
  uint8_t c_1692410;
  uint8_t c_1692417;
  bool c_1692407;
  uint8_t c_1692404;
  uint8_t c_1692402;
  uint8_t c_1692409;
  uint16_t c_1692422;
  uint16_t c_1692424;
  bool decode_1692401_update_TEST_flag();
  bool c_1692425;
  uint2_t decode_1692440_update_TEST_status();
  uint2_t unknown0();
  uint2_t c_1692443;
  uint2_t c_1692446;
  uint4_t decode_1692476_update_ENCRYPT_byte_cnt();
  uint4_t c_1692480;
  uint128_t decode_1692476_update_ENCRYPT_rd_data();
  uint4_t c_1692725;
  bool c_1692728;
  uint16_t c_1692483;
  uint16_t c_1692481;
  uint16_t c_1692484;
  uint8_t c_1692485;
  uint8_t c_1692721;
  uint8_t c_1692730;
  uint4_t c_1692709;
  bool c_1692712;
  uint8_t c_1692705;
  uint8_t c_1692714;
  uint4_t c_1692693;
  bool c_1692696;
  uint8_t c_1692689;
  uint8_t c_1692698;
  uint4_t c_1692677;
  bool c_1692680;
  uint8_t c_1692673;
  uint8_t c_1692682;
  uint4_t c_1692661;
  bool c_1692664;
  uint8_t c_1692657;
  uint8_t c_1692666;
  uint4_t c_1692645;
  bool c_1692648;
  uint8_t c_1692641;
  uint8_t c_1692650;
  uint4_t c_1692629;
  bool c_1692632;
  uint8_t c_1692625;
  uint8_t c_1692634;
  uint4_t c_1692613;
  bool c_1692616;
  uint8_t c_1692609;
  uint8_t c_1692618;
  uint4_t c_1692597;
  bool c_1692600;
  uint8_t c_1692593;
  uint8_t c_1692602;
  uint4_t c_1692581;
  bool c_1692584;
  uint8_t c_1692577;
  uint8_t c_1692586;
  uint4_t c_1692565;
  bool c_1692568;
  uint8_t c_1692561;
  uint8_t c_1692570;
  uint4_t c_1692549;
  bool c_1692552;
  uint8_t c_1692545;
  uint8_t c_1692554;
  uint4_t c_1692533;
  bool c_1692536;
  uint8_t c_1692529;
  uint8_t c_1692538;
  uint4_t c_1692517;
  bool c_1692520;
  uint8_t c_1692513;
  uint8_t c_1692522;
  uint4_t c_1692501;
  bool c_1692504;
  uint8_t c_1692497;
  uint8_t c_1692506;
  uint4_t c_1692491;
  bool c_1692494;
  uint8_t c_1692487;
  uint8_t c_1692496;
  uint16_t c_1692511;
  uint24_t c_1692527;
  uint32_t c_1692543;
  uint40_t c_1692559;
  uint48_t c_1692575;
  uint56_t c_1692591;
  uint64_t c_1692607;
  uint72_t c_1692623;
  uint80_t c_1692639;
  uint88_t c_1692655;
  uint96_t c_1692671;
  uint104_t c_1692687;
  uint112_t c_1692703;
  uint120_t c_1692719;
  uint128_t c_1692735;
  uint2_t decode_1692476_update_TEST_status();
  bool c_1692741;
  uint2_t c_1692743;
  uint128_t decode_1692753_update_ENCRYPT_enc_data();
  const uint128_t c_1692755[16] = {0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
  uint128_t c_1692763;
  uint128_t c_1692765;
  uint128_t c_1692759;
  uint128_t c_1692766;
  uint128_t c_1692757;
  uint128_t c_1692767;
  uint128_t process128(uint128_t arg_0, uint128_t arg_1);
  uint128_t c_1692768;
  uint128_t c_1692769;
  uint2_t decode_1692753_update_TEST_status();
  void ite_1692937(std::map<int, int>& mem_update_map);
  uint16_t c_1692779;
  uint16_t c_1692777;
  uint16_t c_1692780;
  uint4_t c_1692930;
  bool c_1692933;
  uint8_t c_1692926;
  uint4_t c_1692920;
  bool c_1692923;
  uint8_t c_1692916;
  uint4_t c_1692910;
  bool c_1692913;
  uint8_t c_1692906;
  uint4_t c_1692900;
  bool c_1692903;
  uint8_t c_1692896;
  uint4_t c_1692890;
  bool c_1692893;
  uint8_t c_1692886;
  uint4_t c_1692880;
  bool c_1692883;
  uint8_t c_1692876;
  uint4_t c_1692870;
  bool c_1692873;
  uint8_t c_1692866;
  uint4_t c_1692860;
  bool c_1692863;
  uint8_t c_1692856;
  uint4_t c_1692850;
  bool c_1692853;
  uint8_t c_1692846;
  uint4_t c_1692840;
  bool c_1692843;
  uint8_t c_1692836;
  uint4_t c_1692830;
  bool c_1692833;
  uint8_t c_1692826;
  uint4_t c_1692820;
  bool c_1692823;
  uint8_t c_1692816;
  uint4_t c_1692810;
  bool c_1692813;
  uint8_t c_1692806;
  uint4_t c_1692800;
  bool c_1692803;
  uint8_t c_1692796;
  uint4_t c_1692790;
  bool c_1692793;
  uint8_t c_1692786;
  uint8_t c_1692784;
  uint8_t c_1692795;
  uint8_t c_1692805;
  uint8_t c_1692815;
  uint8_t c_1692825;
  uint8_t c_1692835;
  uint8_t c_1692845;
  uint8_t c_1692855;
  uint8_t c_1692865;
  uint8_t c_1692875;
  uint8_t c_1692885;
  uint8_t c_1692895;
  uint8_t c_1692905;
  uint8_t c_1692915;
  uint8_t c_1692925;
  uint8_t c_1692935;
  std::map<int, int> decode_1692775_update_TEST_XRAM_map;
  void decode_1692775_update_TEST_XRAM(std::map<int, int>& mem_update_map);
  uint16_t decode_1692775_update_ENCRYPT_blk_cnt();
  bool c_1692949;
  uint16_t c_1692943;
  bool c_1692944;
  uint16_t c_1692940;
  uint16_t c_1692946;
  uint16_t c_1692951;
  uint4_t decode_1692775_update_ENCRYPT_byte_cnt();
  uint4_t c_1692783;
  uint2_t decode_1692775_update_TEST_status();
  bool c_1692964;
  uint16_t c_1692958;
  bool c_1692959;
  uint2_t c_1692961;
  uint2_t c_1692966;
  void compute();
};
