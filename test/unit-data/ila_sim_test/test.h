#include "systemc.h"
#include <map>
SC_MODULE(TEST) {
  sc_in< sc_biguint<2> > TEST_cmd_in;
  sc_biguint<2> TEST_cmd;
  sc_in< sc_biguint<16> > TEST_cmdaddr_in;
  sc_biguint<16> TEST_cmdaddr;
  sc_in< sc_biguint<8> > TEST_cmddata_in;
  sc_biguint<8> TEST_cmddata;
  sc_in<bool> TEST_cmdflag_in;
  bool TEST_cmdflag;
  sc_out< sc_biguint<2> > TEST_status_out;
  sc_biguint<2> TEST_status;
  sc_out< sc_biguint<16> > TEST_address_out;
  sc_biguint<16> TEST_address;
  sc_out< sc_biguint<16> > TEST_length_out;
  sc_biguint<16> TEST_length;
  sc_out< sc_biguint<128> > TEST_counter_out;
  sc_biguint<128> TEST_counter;
  sc_biguint<8> TEST_XRAM[65536];
  sc_out<bool> TEST_flag_out;
  bool TEST_flag;
  std::map< sc_biguint<32>, sc_biguint<32> > TEST_big_ram;
  sc_biguint<128> ENCRYPT_rd_data;
  sc_biguint<128> ENCRYPT_enc_data;
  sc_biguint<4> ENCRYPT_byte_cnt;
  sc_biguint<16> ENCRYPT_blk_cnt;
  void init_ENCRYPT();
  bool c_1690353;
  bool c_1690355;
  bool decode_1690300();
  bool c_1690272;
  bool c_1690268;
  bool c_1690274;
  bool c_1690297;
  bool c_1690290;
  bool c_1690292;
  bool c_1690294;
  bool c_1690299;
  bool c_1690286;
  bool c_1690300;
  bool decode_1690339();
  bool c_1690336;
  bool c_1690332;
  bool c_1690338;
  bool c_1690328;
  bool c_1690339;
  bool decode_1690375();
  bool c_1690375;
  bool decode_1690652();
  bool c_1690650;
  bool c_1690646;
  bool c_1690652;
  bool decode_1690674();
  bool c_1690674;
  sc_biguint<16> decode_1690300_update_TEST_address();
  bool c_1690277;
  bool c_1690314;
  sc_biguint<8> c_1690311;
  sc_biguint<8> c_1690309;
  sc_biguint<8> c_1690316;
  bool c_1690306;
  sc_biguint<8> c_1690303;
  sc_biguint<8> c_1690301;
  sc_biguint<8> c_1690308;
  sc_biguint<16> c_1690321;
  sc_biguint<16> c_1690323;
  bool decode_1690300_update_TEST_flag();
  bool c_1690324;
  sc_biguint<2> decode_1690339_update_TEST_status();
  sc_biguint<2> unknown0();
  sc_biguint<2> c_1690342;
  sc_biguint<2> c_1690345;
  sc_biguint<4> decode_1690375_update_ENCRYPT_byte_cnt();
  sc_biguint<4> c_1690379;
  sc_biguint<128> decode_1690375_update_ENCRYPT_rd_data();
  sc_biguint<4> c_1690624;
  bool c_1690627;
  sc_biguint<16> c_1690382;
  sc_biguint<16> c_1690380;
  sc_biguint<16> c_1690383;
  sc_biguint<8> c_1690384;
  sc_biguint<8> c_1690620;
  sc_biguint<8> c_1690629;
  sc_biguint<4> c_1690608;
  bool c_1690611;
  sc_biguint<8> c_1690604;
  sc_biguint<8> c_1690613;
  sc_biguint<4> c_1690592;
  bool c_1690595;
  sc_biguint<8> c_1690588;
  sc_biguint<8> c_1690597;
  sc_biguint<4> c_1690576;
  bool c_1690579;
  sc_biguint<8> c_1690572;
  sc_biguint<8> c_1690581;
  sc_biguint<4> c_1690560;
  bool c_1690563;
  sc_biguint<8> c_1690556;
  sc_biguint<8> c_1690565;
  sc_biguint<4> c_1690544;
  bool c_1690547;
  sc_biguint<8> c_1690540;
  sc_biguint<8> c_1690549;
  sc_biguint<4> c_1690528;
  bool c_1690531;
  sc_biguint<8> c_1690524;
  sc_biguint<8> c_1690533;
  sc_biguint<4> c_1690512;
  bool c_1690515;
  sc_biguint<8> c_1690508;
  sc_biguint<8> c_1690517;
  sc_biguint<4> c_1690496;
  bool c_1690499;
  sc_biguint<8> c_1690492;
  sc_biguint<8> c_1690501;
  sc_biguint<4> c_1690480;
  bool c_1690483;
  sc_biguint<8> c_1690476;
  sc_biguint<8> c_1690485;
  sc_biguint<4> c_1690464;
  bool c_1690467;
  sc_biguint<8> c_1690460;
  sc_biguint<8> c_1690469;
  sc_biguint<4> c_1690448;
  bool c_1690451;
  sc_biguint<8> c_1690444;
  sc_biguint<8> c_1690453;
  sc_biguint<4> c_1690432;
  bool c_1690435;
  sc_biguint<8> c_1690428;
  sc_biguint<8> c_1690437;
  sc_biguint<4> c_1690416;
  bool c_1690419;
  sc_biguint<8> c_1690412;
  sc_biguint<8> c_1690421;
  sc_biguint<4> c_1690400;
  bool c_1690403;
  sc_biguint<8> c_1690396;
  sc_biguint<8> c_1690405;
  sc_biguint<4> c_1690390;
  bool c_1690393;
  sc_biguint<8> c_1690386;
  sc_biguint<8> c_1690395;
  sc_biguint<16> c_1690410;
  sc_biguint<24> c_1690426;
  sc_biguint<32> c_1690442;
  sc_biguint<40> c_1690458;
  sc_biguint<48> c_1690474;
  sc_biguint<56> c_1690490;
  sc_biguint<64> c_1690506;
  sc_biguint<72> c_1690522;
  sc_biguint<80> c_1690538;
  sc_biguint<88> c_1690554;
  sc_biguint<96> c_1690570;
  sc_biguint<104> c_1690586;
  sc_biguint<112> c_1690602;
  sc_biguint<120> c_1690618;
  sc_biguint<128> c_1690634;
  sc_biguint<2> decode_1690375_update_TEST_status();
  bool c_1690640;
  sc_biguint<2> c_1690642;
  sc_biguint<128> decode_1690652_update_ENCRYPT_enc_data();
  const sc_biguint<128> c_1690654[16] = {0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
  sc_biguint<128> c_1690662;
  sc_biguint<128> c_1690664;
  sc_biguint<128> c_1690658;
  sc_biguint<128> c_1690665;
  sc_biguint<128> c_1690656;
  sc_biguint<128> c_1690666;
  sc_biguint<128> process128(sc_biguint<128> arg_0, sc_biguint<128> arg_1);
  sc_biguint<128> c_1690667;
  sc_biguint<128> c_1690668;
  sc_biguint<2> decode_1690652_update_TEST_status();
  void ite_1690836(std::map<int, int>& mem_update_map);
  sc_biguint<16> c_1690678;
  sc_biguint<16> c_1690676;
  sc_biguint<16> c_1690679;
  sc_biguint<4> c_1690829;
  bool c_1690832;
  sc_biguint<8> c_1690825;
  sc_biguint<4> c_1690819;
  bool c_1690822;
  sc_biguint<8> c_1690815;
  sc_biguint<4> c_1690809;
  bool c_1690812;
  sc_biguint<8> c_1690805;
  sc_biguint<4> c_1690799;
  bool c_1690802;
  sc_biguint<8> c_1690795;
  sc_biguint<4> c_1690789;
  bool c_1690792;
  sc_biguint<8> c_1690785;
  sc_biguint<4> c_1690779;
  bool c_1690782;
  sc_biguint<8> c_1690775;
  sc_biguint<4> c_1690769;
  bool c_1690772;
  sc_biguint<8> c_1690765;
  sc_biguint<4> c_1690759;
  bool c_1690762;
  sc_biguint<8> c_1690755;
  sc_biguint<4> c_1690749;
  bool c_1690752;
  sc_biguint<8> c_1690745;
  sc_biguint<4> c_1690739;
  bool c_1690742;
  sc_biguint<8> c_1690735;
  sc_biguint<4> c_1690729;
  bool c_1690732;
  sc_biguint<8> c_1690725;
  sc_biguint<4> c_1690719;
  bool c_1690722;
  sc_biguint<8> c_1690715;
  sc_biguint<4> c_1690709;
  bool c_1690712;
  sc_biguint<8> c_1690705;
  sc_biguint<4> c_1690699;
  bool c_1690702;
  sc_biguint<8> c_1690695;
  sc_biguint<4> c_1690689;
  bool c_1690692;
  sc_biguint<8> c_1690685;
  sc_biguint<8> c_1690683;
  sc_biguint<8> c_1690694;
  sc_biguint<8> c_1690704;
  sc_biguint<8> c_1690714;
  sc_biguint<8> c_1690724;
  sc_biguint<8> c_1690734;
  sc_biguint<8> c_1690744;
  sc_biguint<8> c_1690754;
  sc_biguint<8> c_1690764;
  sc_biguint<8> c_1690774;
  sc_biguint<8> c_1690784;
  sc_biguint<8> c_1690794;
  sc_biguint<8> c_1690804;
  sc_biguint<8> c_1690814;
  sc_biguint<8> c_1690824;
  sc_biguint<8> c_1690834;
  std::map<int, int> decode_1690674_update_TEST_XRAM_map;
  void decode_1690674_update_TEST_XRAM(std::map<int, int>& mem_update_map);
  sc_biguint<16> decode_1690674_update_ENCRYPT_blk_cnt();
  bool c_1690848;
  sc_biguint<16> c_1690842;
  bool c_1690843;
  sc_biguint<16> c_1690839;
  sc_biguint<16> c_1690845;
  sc_biguint<16> c_1690850;
  sc_biguint<4> decode_1690674_update_ENCRYPT_byte_cnt();
  sc_biguint<4> c_1690682;
  sc_biguint<2> decode_1690674_update_TEST_status();
  bool c_1690863;
  sc_biguint<16> c_1690857;
  bool c_1690858;
  sc_biguint<2> c_1690860;
  sc_biguint<2> c_1690865;
  void compute();
  SC_HAS_PROCESS(TEST);
  TEST(sc_module_name name_) : sc_module(name_) {
    SC_METHOD(compute);
    sensitive << TEST_cmd_in << TEST_cmdaddr_in << TEST_cmddata_in << TEST_cmdflag_in;
  }
};
